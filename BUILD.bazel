load("@rules_python//python:defs.bzl", "py_binary", "py_library", "py_test")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")

compile_pip_requirements(
    name = "requirements",
    src = "requirements.txt",
    requirements_txt = "requirements_lock_3_12.txt",
)

py_library(
    name = "app_lib",
    srcs = glob(["app/**/*.py"]),
    imports = ["."],
    deps = [
        "@py_deps//aiofiles",  # pip deps
        "@py_deps//aiosqlite",  # pip deps
        "@py_deps//alembic",  # pip deps
        "@py_deps//apscheduler",  # pip deps
        "@py_deps//fastapi",  # pip deps
        "@py_deps//fastapi_users",  # pip deps
        "@py_deps//passlib",  # pip deps
        "@py_deps//pyjwt",  # pip deps
        "@py_deps//sqlalchemy",  # pip deps
        "@py_deps//sqlmodel",  # pip deps
        "@py_deps//uvicorn",  # pip deps
    ],
)

py_binary(
    name = "app_server",
    srcs = ["main.py"],
    args = [
    ],
    data = [],
    imports = ["."],
    main = "main.py",
    deps = [
        ":app_lib",
        "@py_deps//anyio",
        "@py_deps//uvicorn",
    ],
)

py_binary(
    name = "demo_server",
    srcs = ["start.py"],
    args = [
        "-c",
        "-k",
        "--load 8",
    ],
    data = [],
    imports = ["."],
    main = "start.py",
    deps = [
        #        ":app_lib",
    ],
)

py_test(
    name = "python_basic_test",
    srcs = ["tests/python_basic_test.py"],
    main = "tests/python_basic_test.py",
    deps = [":app_lib"],
)

py_binary(
    name = "migrate",
    srcs = ["tools/alembic_runner.py"],
    data = [
        "alembic",
        "alembic.ini",
    ],  # ✅ 确保配置文件和迁移脚本目录被打包
    main = "tools/alembic_runner.py",
    deps = [
        ":app_lib",
        "@py_deps//alembic",
        "@py_deps//fastapi_users",  # pip deps
        "@py_deps//sqlmodel",
    ],
)
